buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

jar {
    baseName = 'ticket'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.projectlombok:lombok:1.16.6')
    compile('org.springframework.boot:spring-boot-starter-web')

    runtime('com.h2database:h2')
    
    testCompile('org.springframework.boot:spring-boot-starter-test')

}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}


checkstyle {
    toolVersion = '6.12'
    configFile = file("${project.rootDir}/config/checkstyle/woowa_checks.xml")
    sourceSets = [sourceSets.main, sourceSets.test]
}

checkstyleMain {
    outputs.upToDateWhen { false }
}

checkstyleTest {
    outputs.upToDateWhen { false }
}

pmd {
    ruleSets = [
        "java-basic",
        "java-braces"
    ]

    sourceSets = [sourceSets.main, sourceSets.test]
}

findbugs {
    sourceSets = [sourceSets.main, sourceSets.test]
}

tasks.withType(FindBugs) {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
